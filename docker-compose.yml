version: '3.4'

networks:
  dev:
    driver: bridge

services:
  hcl.articleservice.api:
    image: ${DOCKER_REGISTRY-}hclarticleserviceapi
    depends_on: 
      - app_db_hcl_article
    container_name: HCL.ArticleMicroservice
    build:
      context: .
      dockerfile: HCL.ArticleService.API/Dockerfile
    environment:
      - MongoDbSettings__Host=mongodb://mongo:mongo@app_db_hcl_article:27017/?authMechanism=SCRAM-SHA-256&tls=false&authSource=admin
      - MongoDbSettings__Database=HCL_Article
      - MongoDbSettings__Collection=articles
      - KafkaSettings__BootstrapServers=kafka:9092
      - KafkaSettings__Topic=new_article
      - KafkaSettings__User=kafka
      - KafkaSettings__Password=kafka
    networks:
      - dev

  app_db_hcl_article: 
    image: mongo:latest
    container_name: app_db_hcl_article
    ports:
      - "27017:27017"
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongo
      MONGO_INITDB_ROOT_PASSWORD: mongo
    volumes:
      - mongo_data_container_articles:/var/lib/mongo_articles/data
    networks:
      - dev

  zookeeper:
    image: 'bitnami/zookeeper:latest'
    container_name: hcl_zookeeper
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - dev

  kafka:
    image: 'bitnami/kafka:latest'
    container_name: hcl_kafka
    ports:
      - '9092:9092'
      - '9093:9093'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:9093
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
      - KAFKA_ZOOKEEPER_USER=kafka
      - KAFKA_ZOOKEEPER_PASSWORD=kafka
    depends_on:
      - zookeeper
    volumes:
      - kafka_data_container:/var/lib/kafka_message/data
    networks:
      - dev
            
volumes:
  mongo_data_container_articles:
  kafka_data_container: